#+title: Teodor

* 2023-09-16
** =major-changes-experiment=: What, who, how, why?
I spent some time digging into the bbin source code to understand what was happening when =bbin uninstall= crashed.
I managed to "patch" over the problem I faced.
No longer a stack trace thrown in the face of the user, and (in my case) correct behavior.

However.

1. I am confident that my "solution" is not the right way to solve this.
   I wrapped all the old code in a try/catch, and fixed my specific issue.
   This is not the right way to grow the code over time.
2. I am not confident that I didn't cause any other issues with my change.
   I might be catching too much.
   And if the underlying behavior (inside the try block) does something I don't expect, further problems might rise.

Could the underlying code be written in a simpler way?
This is an experiment in order to achieve just that.

*approach*:

1. wrap the CLI in my own code.
2. temporary name: =teodorlu.bb-install=.
3. keep all the old code in the same repository as this.
4. try deleting code I don't understand or don't want to take on in scope.

Will this work?
No idea.
But I'm motivated to try.

For now, crate a branch on my fork of the repository, named =major-changes-experiment=.
Goals:

1. See if I'm actually able to tackle this problem
2. Try to provide a straightforward implementation of the current functionality.
   1. Should be simple to understand
   2. Should be simple to see if it is correct or not.
3. Use it for myself
4. Gradually try implementing the existing commands in a simpler manner.

Open question: should I keep the existing data store, or not?
I'm frankly not sure.
I'm not sure I'll be able to do this.
When I glance at the challenge, it seems hard.
But the only way to find out if I'm able to do this is to try.
** Problem: =bbin= is not JVM compatible.
Why do I believe this?

I started up a JVM REPL to work on my code.

The following code crashed!

#+begin_src clojure
(require '[babashka.bbin.cli :as bbin])
#+end_src

I got this error message:

#+begin_src
Execution error (FileNotFoundException) at babashka.bbin.scripts.common/eval9033$loading (common.clj:1).
Could not locate babashka/deps__init.class, babashka/deps.clj or babashka/deps.cljc on classpath.
#+end_src

It appears:

`bbin` uses `babashka.deps`.
`babashka.deps` is provided with babashka.
But it is not present on JVM clojure.
*** Decision: don't use JVM REPL to develop, use bb repl.
Why: I'm not sure I'm able to get this to work on the JVM.
There are potential rabbit holes I don't want to go down.
** Question: is =bb-install= the wrong name?
Running =bb-install install= seems weird.
Perhaps =bb-package=?
We can test out that name too:

#+begin_src shell
bbin install . --as bb-pkg --main-opts '["-m" "teodorlu.bb-install/-main"]'
#+end_src

I think =bb pkg install= works quite well as a bb subcommand name too.

Or /not/.
This will definitely cause confusion.
What is the difference between =bb pkg= and maven and clojars and deps.edn?
Or not.
This is just a subcommand.

But we're not talking about /packages/ here.
We're talking about scripts.

Just =bb script install= then?
But then, aren't any babashka scripts scripts, regardless of whether they are installed or not?
Yes.
But =script install= is a mechanism for /installing scripts/.
Hmm.
Kinda makes sense.

OK, I'm trying =bb script install= for now.
=bb-script=, here we go.

#+begin_src shell
bbin install . --as bb-script --main-opts '["-m" "teodorlu.bb-install/-main"]'
#+end_src

In that case -- =bb script= subcommand names might not make sense as they are right now.

#+begin_src shell
$ bb-script help
Usage: bbin <command>

  bbin install    Install a script
  bbin uninstall  Remove a script
  bbin ls         List installed scripts
  bbin bin        Display bbin bin folder
  bbin version    Display bbin version
  bbin help       Display bbin help
#+end_src

Let's rewrite that to use =bb script=:

#+begin_src text
  bb script install         Install a script
  bb script uninstall       Remove a script
  bb script list-installed  List installed scripts
  bb script help            Display bbin help
#+end_src

That actually looks kind of nice.
** A first improvement: inject fingerprint and make a speedy =list-scripts=
1. Keep the existing =ls= command as-is
2. Change the =install= command to add my fingerprint
3. Write a new =list-installed= command that takes advantage of the fingerprinting
* 2023-09-17
** What do I actually want?
1. The existing functionality
2. Without bugs
3. In a shape that I can see that there are obviously no bugs.

Which means:

- I can fix the uninstall issue, so that it seems /obviously correct/.

Questions I need to answer:

- What is actually happening when a script is installed?
  Is it a single file for each type of script?
  Or is it more complex?
** What does each procurer do?
*** local-jar
1. Creates a template for running local jar files
2. Copies the jar file to =babashka/bbin/jars= (replacing existing)
3. Creates a Clojure bb script shim specifically tailored to local jar files, that links the script to the jar file.

=local-jar= refers back to =babahshka.bbin.jars= for information.
** Observations
1. =install= also does script templating.
   It would be nice if this was separated out.
   Consider composing Clojure core (in a do), instead of using Selmer.
